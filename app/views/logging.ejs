 <% include  partials/header %>
	 

	 

         <h3>Logging Notes</h3>

         <p>express.js would be the place for initializing logging via log4js. 
On heroku, only console logging is allowed but code for a file appender is below:</p>

 
<blockquote>
<pre>
var log4js = require('log4js');
var path = require('path');
var logLocation = path.join(__dirname, 'log4jsconnect.log');
var $depth = 10;
log4js.configure({
    appenders: [
        {type: 'console',
            "layout": {
                "type": "pattern",
                //"pattern": "%d %[%p%] %[%c%] - %m%n"

                pattern: "%d %c %[%p {%x{ln}} -%]\t%m%n",
                tokens: {
                    ln: function () {
                        // The caller:
                        return (new Error).stack.split("\n")[$depth]
                                // Just the namespace, filename, line:
                                .replace(/^\s+at\s+(\S+)\s\((.+?)([^\/]+):(\d+):\d+\)$/, function () {
                                    // return arguments[1] +' '+ arguments[3] +' line '+ arguments[4];
                                    //   return arguments[0] +' '+ arguments[2] +' line '+arguments[3]
                                    return arguments[3] + ':' + arguments[4];
                                });
                    }
                }



            }
        },
        {type: 'file', filename: logLocation, category: '[all]'}
    ],
    "levels": {
        "[all]": "DEBUG",
        "category1": "DEBUG",
        "category2": "INFO" 
    }
}

);
</pre>
</blockquote>

 <p>Categories are specified in places where the logger is called, as below: </p>

<blockquote>

<pre>
var log4js = require('log4js');
var logger = log4js.getLogger('category1');
</pre>

</blockquote>
<p>More information is available at the npm <a href="https://www.npmjs.com/package/log4js">log4js</a> site</p>

 <% include  partials/footer %>