Mongoose refs

https://github.com/mongolab/hello-mongoose
http://blog.modulus.io/getting-started-with-mongoose
http://mongoosejs.com/


materialize css 

http://materializecss.com/modals.html


tiles substitution engine ideas for node/express

http://stackoverflow.com/questions/13272335/is-there-any-template-engine-for-node-js-express-quitely-like-jsp


also window.location.port
var newURL = window.location.protocol + "//" + window.location.host + "/" + window.location.pathname;



Node js driver refs

http://learnmongodbthehardway.com/

to use the express generator npm install
$ npm install -g express-generator

then call express -h in a folder to create a sample app

=================
youtube for mongodb and nodejs and the nodejs mongodb driver

 https://www.youtube.com/watch?v=e36OwQlgBm8
https://www.youtube.com/results?search_query=nodejs+mongodb+driver


********************
https://github.com/mongodb/node-mongodb-native
http://docs.mongodb.org/manual/tutorial/query-documents/
http://theholmesoffice.com/how-to-ge-data-from-mongodb-into-node-js/

!!!!!!
http://mongodb.github.io/node-mongodb-native/2.0/overview/quickstart/
!!!!!!

http://www.hacksparrow.com/the-mongodb-tutorial.html

database : database
collection : table
document : row
field : -
{key:value} : -
********************

DAO PATTERN 
https://gist.github.com/lifecoder/920582
http://www.slideshare.net/miguro1/nodejs-dao
http://www.edave.net/2011/03/22/a-layered-node-js-architecture-using-express/


* var MongoClient = require('mongodb').MongoClient,
 *   test = require('assert');
 * // Connection url
 * var url = 'mongodb://localhost:27017/test';
 * // Connect using MongoClient
 * MongoClient.connect(url, function(err, db) {
 *   // Create a collection we want to drop later
 *   var col = db.collection('createIndexExample1');
 *   // Insert a bunch of documents
 *   col.insert([{a:1, b:1}
 *     , {a:2, b:2}, {a:3, b:3}
 *     , {a:4, b:4}], {w:1}, function(err, result) {
 *     test.equal(null, err);
 * 
 *     // Show that duplicate records got dropped
 *     col.find({}).toArray(function(err, items) {
 *       test.equal(null, err);
 *       test.equal(4, items.length);
 *       db.close();
 *     });
 *   });


//////// promises ////////////////////////////////////
http://strongloop.com/strongblog/promises-in-node-js-with-q-an-alternative-to-callbacks/
http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/
http://satokolomblog.azurewebsites.net/promises-in-node-js-with-q/
http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/
http://stackoverflow.com/questions/19112801/node-js-using-promises-with-mongodb
http://stackoverflow.com/questions/23597059/promise-and-nodejs-mongodb-driver?rq=1



socket io

http://vijayannadi.wordpress.com/tutorials/sample-chat-app-using-nodejs-socketio/
http://aqueous-beyond-8981.herokuapp.com/
https://github.com/vijayannadi/chat