Mongoose refs

https://github.com/mongolab/hello-mongoose
http://blog.modulus.io/getting-started-with-mongoose
http://mongoosejs.com/


Swagger for node

https://dzone.com/articles/usage-of-swagger-in-nodejs-applications-to-documen?edition=120054&utm_source=Daily%20Digest&utm_medium=email&utm_content=DZone%20Daily%20Digest&utm_campaign=dd%202015-11-30&userid=1062111





Node js driver refs

http://learnmongodbthehardway.com/

to use the express generator npm install
$ npm install -g express-generator

then call express -h in a folder to create a sample app
xxx
=================
youtube for mongodb and nodejs and the nodejs mongodb driver

 https://www.youtube.com/watch?v=e36OwQlgBm8
https://www.youtube.com/results?search_query=nodejs+mongodb+driver


********************
https://github.com/mongodb/node-mongodb-native
http://docs.mongodb.org/manual/tutorial/query-documents/
http://theholmesoffice.com/how-to-ge-data-from-mongodb-into-node-js/

!!!!!!
http://mongodb.github.io/node-mongodb-native/2.0/overview/quickstart/
!!!!!!

http://www.hacksparrow.com/the-mongodb-tutorial.html

database : database
collection : table
document : row
field : -
{key:value} : -
********************

DAO PATTERN 
https://gist.github.com/lifecoder/920582
http://www.slideshare.net/miguro1/nodejs-dao
http://www.edave.net/2011/03/22/a-layered-node-js-architecture-using-express/


* var MongoClient = require('mongodb').MongoClient,
 *   test = require('assert');
 * // Connection url
 * var url = 'mongodb://localhost:27017/test';
 * // Connect using MongoClient
 * MongoClient.connect(url, function(err, db) {
 *   // Create a collection we want to drop later
 *   var col = db.collection('createIndexExample1');
 *   // Insert a bunch of documents
 *   col.insert([{a:1, b:1}
 *     , {a:2, b:2}, {a:3, b:3}
 *     , {a:4, b:4}], {w:1}, function(err, result) {
 *     test.equal(null, err);
 * 
 *     // Show that duplicate records got dropped
 *     col.find({}).toArray(function(err, items) {
 *       test.equal(null, err);
 *       test.equal(4, items.length);
 *       db.close();
 *     });
 *   });


//////// promises ////////////////////////////////////
http://strongloop.com/strongblog/promises-in-node-js-with-q-an-alternative-to-callbacks/
http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/
http://satokolomblog.azurewebsites.net/promises-in-node-js-with-q/
http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/
http://stackoverflow.com/questions/19112801/node-js-using-promises-with-mongodb
http://stackoverflow.com/questions/23597059/promise-and-nodejs-mongodb-driver?rq=1



socket io

http://vijayannadi.wordpress.com/tutorials/sample-chat-app-using-nodejs-socketio/
http://aqueous-beyond-8981.herokuapp.com/
https://github.com/vijayannadi/chat

http://socket.io/docs/

source of chat app on socket page
https://github.com/Automattic/socket.io/tree/master/examples/chat

=============
websockets and promises

http://stackoverflow.com/questions/25235784/javascript-angularjs-websocket-with-promises
http://plnkr.co/edit/ORSqXz07I9cLspZQg1iM?p=preview
see the plunk zip file 

http://clintberry.com/2013/angular-js-websocket-service/
https://github.com/exratione/angularjs-websocket-transport


angular component for websockets using socketio
https://github.com/btford/angular-socket-io

========= text index setup in mongodb ===============
 // create text searchable index can be search by words;
 the db is restaurant_collection
the collection is restaurants
 this command needs to be run if the db is brought up from scratch
 db.restaurants.ensureIndex({ name:"text"});
 
 
 // get a list of indices for deleting
 db.restaurants.getIndexes();
 
 //drop an index
 db.restaurants.dropIndex("fff")


=====================
session management node js

http://codeforgeek.com/2014/09/manage-session-using-node-js-express-4/

express.sendfile

D3 image stuff
======================================================================
https://davidwalsh.name/convert-image-data-uri-javascript
https://github.com/krunkosaurus/simg
http://stackoverflow.com/questions/16049538/how-to-convert-save-d3-js-graph-to-pdf-jpeg


Emailing

see this page for using gmail with nodemailer
https://github.com/nodemailer/nodemailer right above the Setting up heading
gmail doesn't support svg


GMAIL USAGE
talks about getting gmail to work with smtp call
checkout this section
also turn on and off again the access to less secure apps

Go to admin.google.com
From the admin console, select “Security”
Select “Basic settings”
Scroll down to “Less secure apps”
Go to settings for less secure apps ››
Check the radio button “Allow users to manage their access to less secure apps”
Save the changes
Open this link being sign in as the super administrator https://www.google.com/settings/security/lesssecureapps
Check the radio button Turn On the access for less secure apps
Unlock Captcha using this link https://accounts.google.com/DisplayUnlockCaptcha



https://www.digitalocean.com/community/questions/unable-to-send-mail-through-smtp-gmail-com

